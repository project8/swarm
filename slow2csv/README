slow2csv is a tool that allows a user to dump data from the 
pypeline slow control database to much simpler CSV files.  this is useful
for quick-and-dirty plots or exploring historical data when you don't have
access to Pypeline or prefer some other plotting utility.

slow2csv can currently only retrieve one channel worth of data at a time.
this limitation in the code is a function of the fact that loggers in dripline
do their work asynchronously, which means that channels which are concurrently
logged do not necessarily share a common timestamp - one may happen one second
before or after another.  because the logical organization of data is by 
timestamp, it doesn't make sense to try to collate multiple channels worth of
logged data in a simple data structure like CSV.

example usage:
	slow2csv -from="2013-10-09%2017:53:00" -to="2013-10-09%2018:53:42" -get_names
	slow2csv -from="2013-10-09%2017:53:00" -to="2013-10-09%2018:53:42" -channel="power_meter_output"

note that at present the date format requires you to use the HTML %20 
escape sequence in place of spaces.  this won't be true forever but it's true
right now.

options:

	-from is a string which specifies the beginning of the date range that 
		slow2csv should search over.

	-to is a string which specifies the end of the date range that slow2csv
		should search over.

	-channel is the name of the channel as logged by dripline.  this is identical
		to the name of the channel as specified in a dripline "get" command.  if
		you don't know the name of the channel or you want to use this utility 
		in an exploratory way, look at the get_names option below.

	-get_names is a boolean flag, false by default.  specifying this flag will 
		cause slow2csv to simply print the name of each channel which was 
		logged for the specified time interval.

